# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

if ! [[ "$LANG" ]]
then
  export LANG=en_CA.UTF-8
fi

# Prevent distrobox from creating wrappers for podman and docker in ~/bin
DISTROBOX_DISABLE_WRAPPER=1

# Path to oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"

ZSH_THEME="powerlevel10k/powerlevel10k"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the followin line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=14

# Uncomment the following line if pasting URLs and other text is messed up.
DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# This needs to be before we source the zsh-syntax-highlighting plugins
autoload -U select-word-style
select-word-style shell

## Autoload .venv
################################################################################
autoload -Uz add-zsh-hook
add-zsh-hook precmd automatically_activate_python_venv

function automatically_activate_python_venv() {
  if [[ -z $VIRTUAL_ENV ]] ; then
    activate_venv
  else
    parentdir="$(dirname ${VIRTUAL_ENV})"
    if [[ "$PWD"/ != "$parentdir"/* ]] ; then
      deactivate
      activate_venv
    fi
  fi
}

function activate_venv() {
  local d n
  d=$PWD

  until false
  do
  if [[ -f $d/.venv/bin/activate ]] ; then
    source $d/.venv/bin/activate
    break
  fi
    d=${d%/*}
    # d="$(dirname "$d")"
    [[ $d = *\/* ]] || break
  done
}


# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    colored-man-pages
    sudo
    command-time
    zsh-syntax-highlighting
    zsh-autosuggestions
    command-not-found
    you-should-use
    autoupdate
    # dircycle
    # git-auto-fetch
    # shrink-path
)

source $ZSH/oh-my-zsh.sh

# Create bin directory if it doesn't exist
[[ -d "${HOME}/bin" ]] || mkdir -p "${HOME}/bin"

# User configuration
################################################################################
export PATH="${HOME}/bin:/var/lib/flatpak/exports/bin:$PATH"
umask 0077

# Pipenv venv in dir needed for vscode and to supress warnings.
export PIPENV_VENV_IN_PROJECT=1 PIPENV_VERBOSITY=1

# Aliases
################################################################################

if command -v eza >/dev/null 2>&1
then
  alias l='eza --icons=always'
fi

if command -v batcat >/dev/null 2>&1
then
  alias cat='batcat --style plain'
elif command -v bat >/dev/null 2>&1
then
  alias cat='bat --style plain'
fi

if command -v nvim >/dev/null 2>&1
then
  alias vim=nvim
  alias vi=vim
  export EDITOR=nvim
fi

if [[ "$(uname -s)" == "Linux" ]] && command -v xdg-open >/dev/null 2>&1
then
  alias drop_cache='sudo sync && sudo sysctl -w vm.drop_caches=3'
  alias drop_swap='drop_cache && sudo swapoff -a && sudo swapon -a'
fi

alias la='l -A'
alias ll='la -l'
alias l1='l -1'
alias code='flatpak run com.visualstudio.code'
alias docker=podman

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Cause less to not page if there is less than a page of data
export LESS='-F'


## This seems like it should be removed
# source /etc/default/locale

PATH="/usr/games:$PATH"

export DOCKER_HOST="unix:///run/user/$(id -u)/podman/podman.sock"

export "PATH=$PATH:~/${HOME}/npm-global/bin"

# Clean up PATH (remove dupes)
# export PATH=$(echo "$PATH" | awk -v RS=: '!a[$1]++' | paste -sd:)
export PATH=$(printf "%s\n" "$PATH" | tr ':' '\n' | awk '!seen[$0]++' | paste -sd:)

# uv
########################################################################################
if [[ -d "${HOME}/.local/bin" ]]
then
  PATH="${HOME}/.local/bin:${PATH}"
fi

if command -v uv >/dev/null 2>&1
then
  eval "$(uv --generate-shell-completion zsh)"
fi
if command -v uvx >/dev/null 2>&1
then
  eval "$(uvx --generate-shell-completion zsh)"
fi

export UV_PROJECT_ENVIRONMENT=.venv

# pyenv
########################################################################################
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init - zsh)"
eval "$(pyenv init --path zsh)"
eval "$(pyenv virtualenv-init -)"


# brew
########################################################################################
[[ -f /home/linuxbrew/.linuxbrew/bin/brew ]] && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# chezmoi
########################################################################################
if command -v chezmoi >/dev/null 2>&1
then
  eval "$(chezmoi completion zsh)"
  alias cm=chezmoi
fi
